    1  sudo apt install apt-transport-https curl sudo curl -fsSLo /usr/share/keyrings/brave-browser-archive-keyring.gpg https://brave-browser-apt-release.s3.brave.com/brave-browser-archive-keyring.gpg echo "deb [signed-by=/usr/share/keyrings/brave-browser-archive-keyring.gpg arch=amd64] https://brave-browser-apt-release.s3.brave.com/ stable main"|sudo tee /etc/apt/sources.list.d/brave-browser-release.list sudo apt update sudo apt install brave-browser 
    2  sudo apt install apt-transport-https curl && sudo curl -fsSLo /usr/share/keyrings/brave-browser-archive-keyring.gpg https://brave-browser-apt-release.s3.brave.com/brave-browser-archive-keyring.gpg && echo "deb [signed-by=/usr/share/keyrings/brave-browser-archive-keyring.gpg arch=amd64] https://brave-browser-apt-release.s3.brave.com/ stable main"|sudo tee /etc/apt/sources.list.d/brave-browser-release.list && sudo apt update && sudo apt install brave-browser -y
    3  sudo snap remove firefox 
    4  sudo apt install gnome-software-plugin-*
    5  sudo add-apt-repository ppa:graphics-drivers/ppa && sudo dpkg --add-architecture i386 && sudo apt update && sudo apt install -y nvidia-driver-495 libvulkan1 libvulkan1:i386
    6  cd /etc/X11/
    7  ls
    8  sudo gedit Xwrapper.config 
    9  chmod 2644 /etc/X11/Xwrapper.config
   10  sudo chmod 2644 /etc/X11/Xwrapper.config
   11  sudo gedit Xwrapper.config 
   12  sudo sh -c "echo 'deb http://download.opensuse.org/repositories/home:/hawkeye116477:/waterfox/xUbuntu_Next/ /' > /etc/apt/sources.list.d/home:hawkeye116477:waterfox.list"
   13  wget -nv https://download.opensuse.org/repositories/home:hawkeye116477:waterfox/xUbuntu_Next/Release.key -O Release.key sudo apt-key add - < Release.key
   14  sudo apt update 
   15  sudo rm -rf /etc/apt/sources.list.d/home\:hawkeye116477\:waterfox.list 
   16  sudo apt update 
   17  echo "deb [arch=amd64] http://deb.librewolf.net $(lsb_release -sc) main" | sudo tee /etc/apt/sources.list.d/librewolf.list
   18  sudo wget https://deb.librewolf.net/keyring.gpg -O /etc/apt/trusted.gpg.d/librewolf.gpg
   19  sudo apt update
   20  sudo apt install librewolf -y
   21  sudo apt update
   22  sudo nano /etc/apt/sources.list.d/librewolf.list 
   23  sudo apt update
   24  sudo apt install librewolf -y
   25  snap connect nordpass:password-manager-service
   26  sudo apt install gnupg ca-certificates
   27  sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF
   28  echo "deb https://download.mono-project.com/repo/ubuntu stable-focal main" | sudo tee /etc/apt/sources.list.d/mono-official-stable.list
   29  sudo apt update
   30  sudo apt install mono-complete -y
   31  wget https://packages.microsoft.com/config/ubuntu/21.04/packages-microsoft-prod.deb -O packages-microsoft-prod.deb
   32  sudo dpkg -i packages-microsoft-prod.deb
   33  rm packages-microsoft-prod.deb
   34  sudo apt-get update;   sudo apt-get install -y apt-transport-https &&   sudo apt-get update &&   sudo apt-get install -y dotnet-sdk-6.0
   35  sudo apt-get update;   sudo apt-get install -y apt-transport-https &&   sudo apt-get update &&   sudo apt-get install -y aspnetcore-runtime-6.0
   36  sudo apt-get install -y dotnet-runtime-6.0
   37  sudo apt install apt-transport-https dirmngr
   38  sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF
   39  echo "deb https://download.mono-project.com/repo/ubuntu vs-bionic main" | sudo tee /etc/apt/sources.list.d/mono-official-vs.list
   40  sudo apt update
   41  sudo apt update && upgrade
   42  sudo cat /etc/apt/sources.list.d/mono-official-stable.list 
   43  sudo cat /etc/apt/sources.list.d/mono-official-vs.list 
   44  sudo rm -rf /etc/apt/sources.list.d/mono-official-stable.list 
   45  sudo apt update && upgrade
   46  sudo apt update && upgradesudo apt install dirmngr gnupg apt-transport-https ca-certificates software-properties-common
   47  sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF
   48  sudo apt-add-repository 'deb https://download.mono-project.com/repo/ubuntu stable-bionic main
   49  sudo apt-add-repository 'deb https://download.mono-project.com/repo/ubuntu stable-bionic main'
   50  sudo apt install monodevelop
   51  sudo apt install ca-certificates-mono
   52  sudo apt install git
   53  dotnet 
   54  dotnet new webapp -o MyWebApp --no-https
   55  cd MyWebApp/
   56  dotnet watch
   57  dotnet new webapi -f net6.0
   58  cd ContosoPizza/
   59  dotnet new webapi -f net6.0
   60  dotnet run
   61  dotnet new mvc -o MvcMovie
   62  dotnet new webapi -f net6.0 --no-https
   63  dotnet run
   64  dotnet dev-certs https --trust
   65  sudo apt install ubuntu-restricted-extras -y
   66  sudo apt install ubuntu-restricted-addons -y
   67  dotnet tool uninstall -g dotnet-aspnet-codegenerator
   68  dotnet tool install -g dotnet-aspnet-codegenerator
   69  dotnet tool uninstall -g dotnet-ef
   70  dotnet tool install --global dotnet-ef
   71  dotnet add package Microsoft.EntityFrameworkCore.Design
   72  dotnet add package Microsoft.EntityFrameworkCore.SQLite
   73  dotnet add package Microsoft.VisualStudio.Web.CodeGeneration.Design
   74  dotnet add package Microsoft.EntityFrameworkCore.SqlServer
   75  export PATH=$HOME/.dotnet/tools:$PATH
   76  dotnet-aspnet-codegenerator controller -name MoviesController -m Movie -dc MvcMovieContext --relativeFolderPath Controllers --useDefaultLayout --referenceScriptLibraries -sqlite
   77  dotnet-aspnet-codegenerator controller -name MoviesController -m MovieModel -dc MvcMovieContext --relativeFolderPath Controllers --useDefaultLayout --referenceScriptLibraries -sqlite
   78  dotnet aspnet-codegenerator controller -h
   79  dotnet tool install --global dotnet-ef
   80  dotnet ef migrations add InitialCreate
   81  dotnet ef database update
   82  code .
   83  docsudo apt-get remove docker docker-engine docker.io containerd runc
   84  sudo apt-get remove docker docker-engine docker.io containerd runc
   85  sudo apt-get install     ca-certificates     curl     gnupg     lsb-release
   86  echo   "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \
   87    $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
   88  sudo groupadd docker,
   89  sudo groupadd docker
   90  sudo usermod -aG docker $USER
   91  newgrp docker 
   92  sudo service docker restart
   93  sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
   94  sudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose
   95  docker-compose migrate-to-labels
   96  docker --version
   97  docker-compose up
   98  sudo docker-compose up
   99  docker-compose up
  100  docker run -d -p 1433:1433 --name SQLServer -e "ACCEPT_EULA=Y" -e "SA_PASSWORD=Test123" -e "MSSQL_PID=Developer" -v data:/var/opt/mssql/data mcr.microsoft.com/mssql/server:2019-CU15-ubuntu-20.04
  101  docker rmi $(docker images -q)
  102  docker stop $(docker ps -a -q)
  103  docker rm $(docker ps -a -q)
  104  docker run -d -p 1433:1433 --name SQLServer -e "ACCEPT_EULA=Y" -e "SA_PASSWORD=Test123" -e "MSSQL_PID=Developer" -v data:/var/opt/mssql/data mcr.microsoft.com/mssql/server:2019-CU15-ubuntu-20.04
  105  docker stop $(docker ps -a -q)
  106  docker rm $(docker ps -a -q)
  107  docker run -d -p 1433:1433 --name SQLServer -e "ACCEPT_EULA=Y" -e "SA_PASSWORD=Test123" -e "MSSQL_PID=Developer" -v /home/ubuntu_os/Documentos/Projetos/Nodejs/Hapi/data:/var/opt/mssql/data mcr.microsoft.com/mssql/server:2019-CU15-ubuntu-20.04
  108  docker s
  109  docker ps
  110* docker 
  111  docker run -d -p 1433:1433 --name SQLServer -e "ACCEPT_EULA=Y" -e "SA_PASSWORD=Test123" -e "MSSQL_PID=Developer" -v /home/ubuntu_os/Documentos/Projetos/Nodejs/Hapi/data:/var/opt/mssql/data mcr.microsoft.com/mssql/server:2019-CU15-ubuntu-20.04
  112  docker exec -d a3f8670e4520
  113  docker run -d a3f8670e4520
  114  docker run  a3f8670e4520
  115  docker start  a3f8670e4520
  116  docker ps -a
  117  docker stop $(docker ps -a -q)
  118  docker rm $(docker ps -a -q)
  119  docker container stop $(docker container ls -aq)
  120  docker container rm $(docker container ls -aq)
  121  docker container stop $(docker container ls -aq) && docker system prune -af --volumes
  122  docker image prune -a --filter "until=24h"
  123  docker volume ls
  124  docker volume rm hapi_data data 
  125  docker network ls
  126  docker network rm [ffb3389de03f]
  127  docker network ls
  128  docker network rm ffb3389de03f
  129  docker network ls
  130  docker system prune
  131  docker container prune
  132  docker image prune
  133  docker volume prune
  134  docker network prune
  135  docker run -d -p 1433:1433 --name SQLServer -e "ACCEPT_EULA=Y" -e "SA_PASSWORD=Test123" mcr.microsoft.com/mssql/server:2019-CU15-ubuntu-20.04
  136  docker ps -a
  137  history >> history.txt
